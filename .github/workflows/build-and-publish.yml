name: Build and publish

on:
  pull_request: 
    paths:
      - .github/**
      - container/**
  push:
    paths:
      - .github/**
      - container/**

env:
  CONTAINER_IMAGE: ghcr.io/${{ github.repository }}
  REGISTRY: ghcr.io

jobs:
  build-image:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: paulhatch/semantic-version@v4.0.2
        id: semver
        name: Calculate version
        with:
          tag_prefix: "v"
          major_pattern: "SemVer: major"
          minor_pattern: "SemVer: minor"
          format: "${major}.${minor}.${patch}-next.${increment}"
          # change_path: "container"
      
      - run: echo "${{ steps.semver.outputs.version }}, ${{ steps.semver.outputs.version_tag }}"
        shell: bash

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Login to ghcr.io
      #   uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Extract image metadata
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.CONTAINER_IMAGE }}
      #     labels: |
      #       org.opencontainers.image.description=Twin Digital base development container.
      #       org.opencontainers.image.title=Development Container Base
      #     tags: |
      #       type=edge,branch=main
      #       type=ref,event=branch
      #       type=ref,event=tag
      #       type=ref,event=pr
      #       type=schedule
      #       type=sha,format=long,prefix=

      # - name: Build image
      #   id: build
      #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      #   with:
      #     context: ./container
      #     labels: ${{ steps.meta.outputs.labels }}
      #     load: true
      #     tags: ${{ steps.meta.outputs.tags }}

      # - name: Validate image
      #   env:
      #     TAG: '${{ github.sha }}'
      #   run: |
      #     docker image inspect "${CONTAINER_IMAGE}:${TAG}"
      #     docker run --rm --entrypoint /bin/bash "${CONTAINER_IMAGE}:${TAG}" -c "$(cat tests.sh)"

      # - name: Push image
      #   if: ${{ github.event_name == 'pull_request' }}
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./container
      #     labels: ${{ steps.meta.outputs.labels }}
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
